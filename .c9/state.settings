{
    "ace": {
        "search": {
            "@backwards": "false",
            "@highlightmatches": "true",
            "@matchcase": "false",
            "@preservecase": "false",
            "@regex": "false",
            "@wholeword": "false",
            "@wraparound": "true"
        }
    },
    "console": {
        "@expanded": true,
        "@height": 309,
        "@maximized": "false",
        "json()": {
            "meta": {
                "accessList": [
                    "tab3",
                    "tab0",
                    "tab1"
                ]
            },
            "name": "pane1",
            "nodes": [
                {
                    "type": "tab",
                    "name": "tab0",
                    "path": "",
                    "className": [
                        "tab0"
                    ],
                    "document": {
                        "changed": false,
                        "meta": {
                            "timestamp": 1467099071356
                        },
                        "filter": true,
                        "title": "bash - \"nj-jiangsz1-de\"",
                        "tooltip": "bash - \"nj-jiangsz1-de\"",
                        "terminal": {
                            "id": "devel_844",
                            "cwd": "",
                            "width": 0,
                            "height": 0
                        }
                    },
                    "editorType": "terminal",
                    "active": false
                },
                {
                    "type": "tab",
                    "name": "tab1",
                    "path": "",
                    "className": [
                        "tab1"
                    ],
                    "document": {
                        "filter": true,
                        "title": "Immediate (Javascript (browser))",
                        "tooltip": "Immediate (Javascript (browser))",
                        "immediate": {
                            "folds": [],
                            "scrolltop": 0,
                            "scrollleft": 0,
                            "selection": {
                                "start": {
                                    "row": 2,
                                    "column": 0
                                },
                                "end": {
                                    "row": 2,
                                    "column": 0
                                },
                                "isBackwards": false
                            },
                            "options": {
                                "guessTabSize": true,
                                "useWrapMode": false,
                                "wrapToView": true
                            },
                            "firstLineState": 0,
                            "type": "jsbrowser",
                            "history": [
                                "new Date().getTimezoneOffset()",
                                "new Date().toLocaleTimeString()",
                                "new Date().toLocaleFormat()",
                                "new Date().toLocaleDateString()",
                                "new Date().toJSON()",
                                "new Date().toISOString()",
                                "new Date().toDateString()",
                                "new Date().toISOString()",
                                "new Date().toUTCString()",
                                "new Date().toString()",
                                "Date.UTC()",
                                "new Date(0,0).toString()",
                                "new Date(0,0,0).toString()",
                                "new Date(0).toString()",
                                "new Date(0)",
                                "new Date(2013,12,1).toString()",
                                "new Date(2013,1,1).toString()",
                                "new Date(3600).toString()",
                                "new Date(0).toString()",
                                "new Date(3600*24).toString()",
                                "new Date(3600*24)",
                                "new Date(3600*24*1000).toString()",
                                "new Date(3600*24*1000)",
                                "new Date().getTime()",
                                "Date()",
                                "Math.log(8)",
                                "Math.min([1,2,3])",
                                "Math.abs(1.25)",
                                "clear",
                                "Math.LN2",
                                "Math.E",
                                "Math.E()",
                                "matches.__proto__",
                                "matches.prototype",
                                "matches",
                                "var matches = \"cat, bat, sat, fat\".match(\"at\");",
                                "\"cat, bat, sat, fat\".match(\"at\");",
                                "String.fromCharCode(0x0BC7)",
                                "String.fromCharCode(0x0BB7,0x0BC7)",
                                "String.fromCharCode(0x0BB7,0x0EE7)",
                                "String.fromCharCode(0xD842, 0xDFB7)",
                                "var i = 0;\nfor (; i < 100; i++) {\n  console.log(String.fromCharCode(0xAB00 + i))\n}",
                                "var i = 0;\nfor (; i < 100; i++) {\n  console.log(String.fromCharCode(0xA900 + i))\n}\n",
                                "var i = 0;\nfor (; i < 100; i++) {\n  console.log(String.fromCharCode(0xA490 + i))\n}",
                                "var i = 0;\nfor (; i < 100; i++) {\n  console.log(String.fromCharCode(0x2460 + i))\n}",
                                "var i = 0;\nfor (; i < 100; i++) {\n  console.log(String.fromCharCode(0x0370 + i))\n}",
                                "var i = 0;\nfor (; i < 100000; i++) {\n  console.log(String.fromCharCode(1 + i))\n}",
                                "var i = 0;\nfor (; i < 100; i++) {\n  console.log(String.fromCharCode(0x12A00 + i))\n}",
                                "String.fromCharCode(0x12A52)",
                                "String.fromCharCode(0x12C52)",
                                "String.fromCharCode(0x12E52)",
                                "String.fromCharCode(0x123BE52)",
                                "String.fromCharCode(0x123BS52)",
                                "String.fromCharCode(0x123BC52)",
                                "String.fromCharCode(0x123BB52)",
                                "String.fromCharCode(0x1238852)",
                                "String.fromCharCode(0x123456)",
                                "String.fromCharCode(0x20BB8)",
                                "String.fromCharCode(0x20BB7)",
                                "if (typeof v === \"undefined\"){}",
                                "if (v){}",
                                "(-0.00001426).toExponential()",
                                "(0.00001426).toExponential()",
                                "parseFloat('1.234e-0')",
                                "parseFloat('1.234e-1')",
                                "parseFloat('1.234e-3')",
                                "(-1234).toExponential()",
                                "(1234).toExponential()",
                                "Number.MIN_VALUE",
                                "-Infinity === Number.NEGATIVE_INFINITY",
                                "-Infinity",
                                "x",
                                "var x = new Number(1);\ntypeof x",
                                "x",
                                "var x = new Number(1);\ntypeof x",
                                "x",
                                "var x = Number(1);\ntypeof x",
                                "Boolean(false)",
                                "Boolean('false')",
                                "if (Boolean(false)) {\n    console.log(\"true\"); \n}",
                                "if (new Boolean(false)) {\n    console.log(\"true\"); \n}",
                                "new Boolean(false)",
                                "Boolean(false)",
                                "function Person(name, age) {\n  this.name = name;\n  this.age = age;\n}\nPerson.prototype.say = function() {\n  console.log('hello, my name is ' + this.name);\n};\n\nfunction Man(name, age) {\n  Person.apply(this, arguments);\n}\nMan.prototype = Object.create(Person.prototype);\nMan.prototype.constructor = Man;\n\nMan.prototype.say = function() {\n  console.log('duang');\n\n}\nPerson.prototype.say === Man.prototype.say",
                                "function Person(name, age) {\n  this.name = name;\n  this.age = age;\n}\nPerson.prototype.say = function() {\n  console.log('hello, my name is ' + this.name);\n};\n\nfunction Man(name, age) {\n  Person.apply(this, arguments);\n}\nMan.prototype = Object.create(Person.prototype);\nMan.prototype.constructor = Man;\nPerson.prototype.say === Man.prototype.say",
                                "function Person(name, age) {\n  this.name = name;\n  this.age = age;\n}\nPerson.prototype.say = function() {\n  console.log('hello, my name is ' + this.name);\n};\n\nfunction Man(name, age) {\n  Person.apply(this, arguments);\n}\nMan.prototype = Object.create(Person.prototype);\nMan.prototype.constructor = Man;\n\nMan.prototype.say = function() {\n  console.log('duang');\n\n}\nPerson.prototype",
                                "function Person (name, age) {\n            this.name = name;\n            this.age = age;\n        }\nPerson.prototype.say = function(){\n    console.log('hello, my name is ' + this.name);\n};\nfunction Man(name, age) {\n    Person.apply(this, arguments);\n}\nMan.prototype = Object.create(Person.prototype);//a.\nMan.prototype.constructor = Man;//b.\nvar man1 = new Man('pursue');\nvar man2 = new Man('joe');\nconsole.log(man1.say == man2.say);\nconsole.log(man1.name == man2.name);",
                                "function Person (name, age) {\n            this.name = name;\n            this.age = age;\n        }\nPerson.prototype.say = function(){\n    console.log('hello, my name is ' + this.name);\n};\nfunction Man(name, age) {\n    Person.apply(this, arguments);\n}\nMan.prototype = Object.create(Person.prototype);//a.\nMan.prototype.constructor = Man;//b.\nvar man1 = new Man('pursue');\nvar man2 = new Man('joe');\nconsole.log(man1.say == man2.say);",
                                "function Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = new Animal(); \nCat.prototype.constructor = Cat; // 编程时务必要遵守\nvar cat1 = new Cat(\"大毛\", \"黄色\");\ncat1",
                                "function Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = new Animal(); \nCat.prototype.constructor = Cat; // 编程时务必要遵守\nvar cat1 = new Cat(\"大毛\", \"黄色\");\ncat1.__proto__",
                                "\nfunction Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = new Animal(); \nCat.prototype.constructor = Cat; // 编程时务必要遵守\nvar cat1 = new Cat(\"大毛\", \"黄色\");\ncat1",
                                "function Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = new Animal(); \nCat.prototype.constructor = Cat; // 编程时务必要遵守\nCat.constructor",
                                "function Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = new Animal(); \nCat.prototype.constructor = Cat; // 编程时务必要遵守\nvar cat1 = new Cat(\"大毛\", \"黄色\");\ncat1.eat();",
                                "function Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = new Animal(); \nCat.prototype.constructor = Cat; // 编程时务必要遵守\nCat.prototype",
                                "function Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = new Animal(); \nCat.prototype.constructor = Cat; // 编程时务必要遵守\nCat.eat()",
                                "function Animal() {\n    this.species = \"动物\";\n}\nAnimal.prototype.eat = function() {\n    alert(\"Eat anything.\");\n};\nfunction Cat(name, color) {\n    this.name = name;\n    this.color = color;\n}\nCat.prototype = Animal.prototype;\nCat.prototype.constructor = Cat; // 编程时务必要遵守\nAnimal.prototype.constructor",
                                "var A = {name:\"wangyunok\"};\nvar B = {weibo:\"http://weibo.com/wangyunok\"};\nvar C = {github:\"https://github.com/wangyunok\"}\nB",
                                "var A = {name:\"wangyunok\"};\nvar B = {weibo:\"http://weibo.com/wangyunok\"};\nvar C = {github:\"https://github.com/wangyunok\"}\nB.__proto__",
                                "function Person(){}\nPerson.prototype.clzName = \"Person\";\n\n\nvar p = new Person();\n\ntypeof Person",
                                "function Person(){}\nPerson.prototype.clzName = \"Person\";\n\n\nvar p = new Person();\n\ntypeof p\n",
                                "Person.prototype",
                                "function Person(){}\nPerson.prototype.clzName = \"Person\";\n\n\nvar p = new Person();\np.__proto__",
                                "p.prototype",
                                "Person.prototype",
                                "function Person(){}\nPerson.prototype.clzName = \"Person\";\n\n\nvar p = new Person();\np.constructor",
                                "function Person(){}\n\nvar p = new Person();\np.constructor",
                                "var Person = {\n  name: \"Person\"\n};\n\nvar p = new Person();\np.constructor",
                                "typeof new Number(123)",
                                "typeof new Number(123).valueOf()",
                                "var users = [{name:\"tom\", email:\"tom@example.com\"},\n             {name:\"peter\", email:\"peter@example.com\"}];\n\nusers\n.map(function (user){ return user.email; })\n.filter(function (email) { return /^t/.test(email); })\n.forEach(alert);",
                                "\"5\" !== \"5\"",
                                "\"5\" === \"5\"",
                                "\"5\" !== \"5\"",
                                "\"5\" === \"5\"",
                                "\nNaN !== NaN",
                                "NaN === NaN",
                                "[3,4,5,6,10].reduce(function (partial, value){\n        return partial + value;\n    })",
                                "[1, 2, 3, 4, 5].every(function(elem, index, arr){\n    return elem >= 3;\n});",
                                "[1, 2, 3, 4, 5].some(function(elem, index, arr){\n    return elem >= 3;\n});",
                                "[1, 2, 3, 4, 5].map(function(elem, index, arr){\n  index % 2;\n});",
                                "[1, 2, 3, 4, 5].map(function(elem, index, arr){\n  return index % 2;\n});",
                                "[1, 2, 3, 4, 5].map(function(elem, index, arr){\n  return index % 2 === 0;\n});",
                                "[1, 2, 3, 4, 5].filter(function (elem){\n  return (elem > 3);\n})",
                                "Array(2).map(function (){\n  console.log('enter...');\n  return 1;\n})",
                                "var f = function(n){ return n + 1 };\n\n[1, undefined, 2].map(f)",
                                "[undefined, undefined].map(function (){\n  console.log('enter...');\n  return 1;\n})",
                                "[\n  { name: \"张三\", age: 30 },\n  { name: \"李四\", age: 24 },\n  { name: \"王五\", age: 28 }\n].sort(function(o1, o2) {\n  return o1.age - o2.age;\n})",
                                "[\n  { name: \"张三\", age: 30 },\n  { name: \"李四\", age: 24 },\n  { name: \"王五\", age: 28  }\n].sort(function(o1, o2) {\n  return o1.age - o2.age;\n})",
                                "x\nx",
                                "var o = {};\n    Object.observe(o, function(changes) {\n        changes.forEach(function(change) {\n            console.log(change.type, change.name, change.oldValue);\n        });\n    });\n\n    o.foo = 1; // add, 'foo', undefined\n    o.foo = 2; // update, 'foo', 1\n    delete o.foo; // delete, 'foo', 2",
                                "var o = {a:1};\ntypeof o.valueOf()",
                                "var a = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\na.slice(-4)",
                                "var a = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\na.slice(-4,0)",
                                "var a = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\na.slice(-4,-1)",
                                "var a = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\na.slice(-1,-4)",
                                "var a = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\na.slice(-5,-4)",
                                "var a = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\na.slice(-2,-4)",
                                "Array.prototype.slice.call({ 0: 'a', 1: 'b',\"x\":\"x\", length: 2 })",
                                "Array.prototype.slice.call({ 0: 'a', 1: 'b', length: 2 })",
                                "a",
                                "var a = [1,2,3];\nvar b = [4,5,6];Array.prototype.push.apply(a, b);a.valueOf()",
                                "a.valueOf()",
                                "a.toString()",
                                "a.toSource()",
                                "var a = [1,2,3];\nvar b = [4,5,6];a.push(b)",
                                "new Array('1') ",
                                "new Array(1,) ",
                                "var o = {};o.to",
                                "var o = Object.create(Object.prototype, {\n  foo: {\n    get: function () {\n      return 'getter';\n    },\n    set: function (value) {\n      console.log('setter: '+value);\n    }\n  }\n}); o.foo",
                                "o.get(\"foo\")",
                                "var o = Object.create(Object.prototype, {\n  foo: {\n    get: function () {\n      return 'getter';\n    },\n    set: function (value) {\n      console.log('setter: '+value);\n    }\n  }\n}); o.getFoo()",
                                "typeof(this)",
                                "var o = {};\no.p = 123;\n\no.propertyIsEnumerable(\"p\")",
                                "var car = {\n  id: 123,\n  color: 'red',\n  ownerId: 12\n};\n\nvar owner = {\n  id: 12,\n  name: 'Jack'\n};\n\nObject.defineProperty(car, 'ownerInfo', {value: owner, enumerable: false});\ncar.ownerInfo // {id: 12, name: \"Jack\"}\n\nJSON.stringify(car) ",
                                "delete o.foo; // delete, 'foo', 2",
                                "o.foo = 2; // update, 'foo', 1",
                                "var o = {};\n\nObject.observe(o, function(changes) {\n  changes.forEach(function(change) {\n    console.log(change.type, change.name, change.oldValue);\n  });\n});\n\no.foo = 1; // add, 'foo', undefined",
                                "Object()",
                                "new Object()",
                                "new Object",
                                "var arr = new Array();arr instanceof Object",
                                "var f = Object(function(){}); f instanceof Array",
                                "var f = Object(function(){}); f instanceof Function",
                                "var f = Object(function(){}); f instanceof Object",
                                "Object(function(){})",
                                "[].toString()",
                                "Number([].toString())",
                                "Number({valueOf:function (){return 2;},toString:function(){return 3;}})",
                                "String({valueOf:function (){return 2;},toString:function(){return 3;}})",
                                "Number({valueOf:function (){return 2;}})",
                                "var o = {a:1};\ntypeof o.valueOf()",
                                "var o = {a:1};\ntypeof o.valueOf() === 'object'",
                                "var o = {a:1};\no.valueOf()",
                                "var o = {a:1};\no.toString()",
                                "{a:1}.toString()",
                                "{a:1}.valueOf()",
                                "function fibonacci(n) {\n    n = n || 1; //undefined、null、false、0、NaN、””（空字符串）\n    n = isNaN(n) ? 1 : n; //非数值类型\n    n = n < 0 ? 1 : n; //负数\n    //n = parseInt(n); //取整\n    n = ~~n; //使用否运算取整\n    var a = 1,\n        b = 1;\n    if (arguments.length == 3) {\n        a = arguments[1];\n        b = arguments[2];\n    }\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci(n - 1, b, a + b);\n    }\n}\nfibonacci(\"10\")",
                                "function fibonacci(n) {\n    n = n || 1; //undefined、null、false、0、NaN、””（空字符串）\n    n = isNaN(n) ? 1 : n; //非数值类型\n    n = n < 0 ? 1 : n; //负数\n    //n = parseInt(n); //取整\n    n = ~~n; //使用否运算取整\n    var a = 1,\n        b = 1;\n    if (arguments.length == 3) {\n        a = arguments[1];\n        b = arguments[2];\n    }\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci(n - 1, b, a + b);\n    }\n}\nfibonacci(\"10\")\n",
                                "isNaN(\"12.34\")",
                                "Number('\\t\\v\\r12.34\\n ')",
                                "var o = {p:1};\n(o);\n",
                                "var o = {p:1};\nvar x = (o);\nx.p;\n",
                                "var o = {p:1};\n\n(o)",
                                "var FLAG_A = 1; // 0001\nvar FLAG_B = 2; // 0010\nvar FLAG_C = 4; // 0100\nvar FLAG_D = 8; // 1000\nFLAG_D.toString(2)",
                                "var FLAG_A = 1; // 0001\nvar FLAG_B = 2; // 0010\nvar FLAG_C = 4; // 0100\nvar FLAG_D = 8; // 1000\nvar mask = FLAG_A | FLAG_B | FLAG_D;\nmask & FLAG_C;",
                                "var FLAG_A = 1; // 0001\nvar FLAG_B = 2; // 0010\nvar FLAG_C = 4; // 0100\nvar FLAG_D = 8; // 1000\nvar mask = FLAG_A | FLAG_B | FLAG_D;\nmask;",
                                "var num = 2;\nparseInt(num).toString(2)",
                                "2.toString(2)",
                                "[2].toString(2)",
                                "\"2\".toString(2)",
                                "21 >> 3",
                                "-4 >> -1",
                                "-4 >> 1",
                                "var color = {r: 186, g: 218, b: 85};\n// RGB to HEX\nvar rgb2hex = function(r, g, b) {\n    return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).substr(1);\n}\nrgb2hex(color.r,color.g,color.b) // \"#bada55\"",
                                "12.9^0",
                                "var a = 10;\nvar b = 99;\n\na^=b, b^=a, a^=b;\n\na // 99\nb",
                                "var a = 10;\nvar b = 99;\n\na^=b, b^=a, a^=b;\n\na",
                                "var i = -2.9;\ni = ~~i;\ni",
                                "var i = 2.9;\ni = ~~i;\ni",
                                "var i = 2.9;\n~~i;\ni",
                                "~~2.9",
                                "var i = 2;\ni = i|'';\ni",
                                "var i = 0;\ni = i||'';\ni",
                                "var i = 1;\ni = i||'';\ni",
                                "var i;\ni = i|'';\ni",
                                "var i = 0;\ni = i|'';\nivar i;\ni = i|'';\ni",
                                "var i = 0;\ni = i|'';\ni",
                                "var i = \"0\";\ni = i|'';\ni",
                                "var i = \"\";\ni = i|'XXX';\ni",
                                "var i = 0;\ni = i|'XXX';\ni",
                                "var i = 2;\ni = i|0;\ni",
                                "!NaN",
                                "!Nan",
                                "\"1\" == true",
                                "(function (){}) == function (){}",
                                "var obj1 = {x:1};\nvar obj2 = {x:1};\nobj1 == obj2",
                                "parseInt(3.6)",
                                "var now = new Date();\ntypeof (now + 1) // \"string\"\nnow - 1 // \"number\"",
                                "var now = new Date();\ntypeof (now + 1) // \"string\"\ntypeof (now - 1) // \"number\"",
                                "var now = new Date();\ntypeof (now + 1) // \"string\"",
                                "var now = new Date();now",
                                "var now = new Date();",
                                "new Date()",
                                "function fibonacci1(n) {\n    n = n || 1; //undefined、null、false、0、NaN、””（空字符串）\n    n = isNaN(n) ? 1 : n; //非数值类型\n    n = parseInt(n); //取整\n    n = n < 0 ? 1 : n;\n    var a = 1,\n        b = 1;\n\n    if (arguments.length < 3) {\n        a = 1;\n        b = 1;\n    }\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nconsole.log(fibonacci1(3.1));",
                                "isNaN(5.1)",
                                "function fibonacci1(n) {\n    n = n || 1;\n    var a = 1, b = 1;\n    \n    if (arguments.length < 3) {\n        a = 1;\n        b = 1;\n    }\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nconsole.log(fibonacci1());",
                                "function fibonacci1(n, a, b) {\n    if (arguments.length < 3) {\n        a = 1;\n        b = 1;\n    }\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(fibonacci1(3));",
                                "function fibonacci1(n, a, b) {\n    if (arguments.length < 3) {\n        a = 1;\n        b = 1;\n    }\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(fibonacci1(1));",
                                "var start = new Date();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(fibonacci1(1, 1, 1));",
                                "var start = new Date();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(fibonacci1(1, 1));",
                                "var start = new Date();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(fibonacci1(1));\nconsole.log(start.getTime())\nconsole.log(end.getTime())\nconsole.log(end.getTime() - start.getTime())",
                                "var start = new Date();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(start.getTime())\nconsole.log(end.getTime())\nconsole.log(end.getTime() - start.getTime())",
                                "var start = new Date();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(end.getTime())",
                                "var start = new Date();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(end.getMilliseconds())",
                                "var start = new Date();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Date();\nconsole.log(end)",
                                "var start = new Time();\nfunction fibonacci1(n, a, b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Time();\nconsole.log(end)",
                                "var start = new Time();\nfunction fibonacci1(var n, var a, var b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Time();\nconsole.log(end)",
                                "var start = new Time();\nfunction fibonacci1(var n, var a, var b) {\n    if (n <= 2) {\n        return b;\n    } else {\n        return fibonacci1(n - 1, b, a + b);\n    }\n}\nvar end = new Time();\nconsole.log(end - start)",
                                "function createIncrementor(start) {\n\t\n    return function() {\n\t\tconsole.log(\"xx\" + start);\n    return start++;\n    }\n}\n\nvar inc = createIncrementor(5);\n\nconsole.log(inc()); // 5\nconsole.log(inc()); // 6",
                                "function createIncrementor(start) {\n\tconsole.log(\"xx\" + start);\n    return function() {\n        return start++;\n    }\n}\n\nvar inc = createIncrementor(5);\n\nconsole.log(inc()); // 5\nconsole.log(inc()); // 6",
                                "var inc = createIncrementor(5);\nconsole.log(inc); //\nconsole.log(inc()); // 5\ninc(); // 6",
                                "var inc = createIncrementor(5);\nconsole.log(inc); //\nconsole.log(inc()); // 5\nconsole.log(inc()); // 6",
                                "var test = function() {\n    var start = 5;\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start);\n}\nvar inc =test(5);\nconsole.log(inc())\nconsole.log(inc())\n",
                                "var test = function() {\n    var start = 5;\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start);\n}\nvar inc =test(5)();\nconsole.log(test())\nconsole.log(test())",
                                "var test = function() {\n    var start = 5;\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start);\n}\nvar inc =test(5)();\nconsole.log(test())\nconsole.log(test())\n",
                                "var test = function() {\n    var start = 5;\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start)();\n}\nvar inc =test(5);\nconsole.log(test())\nconsole.log(test())",
                                "var test = function() {\n    var start = 5;\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start);\n}\nvar inc =test(5);\nconsole.log(test())\nconsole.log(test())",
                                "var test = function() {\n    var start = 5;\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    var inc = createIncrementor(start);\n    return inc();\n}\nconsole.log(test())\nconsole.log(test())",
                                "function createIncrementor(start) {\n    return function() {\n        return start++;\n    }\n}\n\nvar inc = createIncrementor(5);\n\nconsole.log(inc()) // 5\nconsole.log(inc()) // 6\nconsole.log(inc()) // 7",
                                "inc()",
                                "function createIncrementor(start) {\n    return function() {\n        return start++;\n    }\n}\n\nvar inc = createIncrementor(5);\n\ninc() ",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    var inc = createIncrementor(start);\n    return inc();\n}\nconsole.log(test(5))\nconsole.log(test(5))",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    var inc = createIncrementor(start);\n    console.log(inc());\n    console.log(inc());\n    console.log(inc());\n}\ntest(5)",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    var inc = createIncrementor(start);\n    console.log(inc());\n    console.log(inc());\n    console.log(inc());\n}",
                                "inc();",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start);\n}\n\n\nvar inc = test(5);\ninc();",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start);\n}\n\n\ntest(5) // 5",
                                "function createIncrementor(start) {\n        return function () { \n            return start++;\n        }\n}\n\nvar inc = createIncrementor(5);\n\ninc() // 5",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(start);\n}\n\n\ntest(5) // 5",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n    return createIncrementor(5);\n}\n\n\ninc() // 5",
                                "var test = function(start) {\n    function createIncrementor(start) {\n        return function() {\n            return start++;\n        }\n    }\n\n    return createIncrementor(5);\n}\n\n\ninc() // 5",
                                "function createIncrementor(start) {\n    return function() {\n        return start++;\n    }\n}\n\ncreateIncrementor(5);",
                                "function createIncrementor(start) {\n    var obj = {\n        add: function() {\n            return start++;\n        }\n    }\n    return obj.add;\n\n}\n\nvar inc = createIncrementor(5);\n\ninc() // 5",
                                "function createIncrementor(start) {\n    var obj = {\n        add: function() {\n            return start++;\n        }\n    }\n    return obj.add;\n\n}\n\nvar inc = createIncrementor(5);",
                                "function createIncrementor(start) {\n    var obj = {\n        add: function() {\n            return start++;\n        }\n    }\n    return obj.add()\n\n}\n\nvar inc = createIncrementor(5);\n\ninc() // 5",
                                "var name = \"The Window\";\nvar object = {\n    name: \"My Object\",\n    getNameFunc: function() {\n        return function() {\n            return this.name;\n        };\n    }\n};\nobject.getNameFunc();",
                                "function createIncrementor(start) {\n        return function () { \n            return start++;\n        }\n}\n\nvar inc = createIncrementor(5);\n\ninc()",
                                "var name = \"The Window\";\nvar object = {\n    name: \"My Object\",\n    getNameFunc: function() {\n        var that = this;\n        return function() {\n            return that.name;\n        };\n    }\n};\nalert(object.getNameFunc()());//My Object",
                                "var name = \"The Window\";\nvar object = {\n    name: \"My Object\",\n    getNameFunc: function() {\n        return function() {\n            return this.name;\n        };\n    }\n};\nalert(object.getNameFunc()());//The Window",
                                "　　var name = \"The Window\";\n　　var object = {\n　　　　name : \"My Object\",\n　　　　getNameFunc : function(){\n　　　　　　var that = this;\n　　　　　　return function(){\n　　　　　　　　return that.name;\n　　　　　　};\n　　　　}\n　　};\nobject.getNameFunc()()",
                                "var name = \"The Window\";\n　　var object = {\n　　　　name : \"My Object\",\n　　　　getNameFunc : function(){\n　　　　　　return function(){\n　　　　　　　　return this.name;\n　　　　　　};\n　　　　}\n　　};\nobject.getNameFunc()",
                                "var name = \"The Window\";\n　　var object = {\n　　　　name : \"My Object\",\n　　　　getNameFunc : function(){\n　　　　　　return function(){\n　　　　　　　　return this.name;\n　　　　　　};\n　　　　}\n　　};\nobject.getNameFunc()()",
                                "var f = function(one) {\n  console.log(arguments.callee);\n  return 1;\n}\nf();",
                                "var f = function(one) {\n  console.log(arguments.callee);\n}\nf();",
                                "function f(a,b){\n    return a;\n}\n\nf(,1)",
                                "function f(a, b) {\n\tconsole.log(f.length);\n\tconsole.log(2);\n}\nfunction f(a) {\n\tconsole.log(f.length);\n\tconsole.log(1);\n}\n\n\n\n\nf(1,2);",
                                "function f(a) {\n\tconsole.log(f.length);\n\tconsole.log(1);\n}\n\nfunction f(a, b) {\n\tconsole.log(f.length);\n\tconsole.log(2);\n}\n\nf(1);",
                                "int Fibonacci(int n) {\n    if (n<=2) {\n        return 1;\n    }\n    else {\n        return Fibonacci(n-1) + Fibonacci(n-2);\n    }\n}",
                                "var print = function x(){\n  console.log(typeof x);\n};\n\n\nprint()",
                                "var print = function x(){\n  console.log(typeof x);\n};\n\nx",
                                "var print = function x(){\n  console.log(typeof x);\n};",
                                "var arr = [1, 2];\narr[10] = 10;\nvar l = arr.length;\nwhile (l--){\n    console.log(arr[l]);\n}\n\"end\"",
                                "var arr = [1, 2];\narr[10] = 10;\nvar l = arr.length;\nwhile (l--){\n    console.log(arr[l]);\n}\nconsole.log(\"end\")",
                                "var arr = [1, 2];\narr[10] = 10;\nvar l = arr.length;\nwhile (l--){\n    console.log(arr[l]);\n}",
                                "var a = [];\n\na[\"p\"] = \"abc\";\na.length // 0\na[2.1] = \"abc\";\na.length // 0\na",
                                "var a = ['a'];\na.length = 3;\na // [\"a\", undefined × 2]",
                                "var arr = [1, 2];\narr[10] = 10;\narr//[1,2,10]",
                                "var arr = [1, 2];\narr[10] = 10;\narr\n\nvar a = ['a'];\na.length = 3;\na",
                                "var arr = ['a', 'b'];\narr[10] = 10;\narr",
                                "var a = ['a'];\n\na.length = 3;\na",
                                "arr.length",
                                "var arr = ['a', 'b'];\narr[10] = 10;\narr",
                                "var a = [];\n\na[1.05] = 6;\na[1.05] // 1",
                                "var a = [];\n\na[1.05] = 6;\na[1] // 1",
                                "var a = [];\n\na['1000'] = 'abc';\na[1000] // 'abc'\n\na[1.00] = 6;\na[1] // 1",
                                "function b64Encode( str ) {\n  return btoa(encodeURI( str ));\n}\nb64Encode('你好')",
                                "function b64Decode( str ) {\n  return decodeURIComponent(atob( str ));\n}\n\n\nb64Decode('JUU0JUJEJUEwJUU1JUE1JUJE') // \"你好\"",
                                "function b64Encode( str ) {\n  return btoa(encodeURIComponent( str ));\n}\nb64Encode('你好') // \"5L2g5aW9\"",
                                "function b64Encode( str ) {\n  return btoa(unescape(encodeURIComponent( str )));\n}\n\nfunction b64Decode( str ) {\n  return decodeURIComponent(escape(atob( str )));\n}\n\nb64Encode('你好') // \"5L2g5aW9\"",
                                "function b64Encode( str ) {\n  return btoa(unescape(encodeURIComponent( str )));\n}\n\nfunction b64Decode( str ) {\n  return decodeURIComponent(escape(atob( str )));\n}\n\nb64Encode('你好') // \"5L2g5aW9\"\nb64Decode('5L2g5aW9') // \"你好\"",
                                "\"\\uD834\\uDF06\"",
                                "'\\251'",
                                "\\251",
                                "Number(' ')",
                                "-1/0",
                                "1/-0",
                                "1/-1",
                                "1/0",
                                "0/0",
                                "typeof NaN",
                                "0.2-0.1",
                                "0.3-0.2",
                                "0.3 / 0.1",
                                "0.1 + 0.2",
                                "1 + 1.0",
                                "1 === 1.0",
                                "\"      \" == true",
                                "\"x\" == false",
                                "\" \" == false",
                                "\"\" == false",
                                "Number(undefined)",
                                "Number(null)",
                                "undefined == true",
                                "undefined == false",
                                "null == false",
                                "undefined == null",
                                "var 临时变量 = 1;\nconsole.log(临时变量);",
                                "var 临时变量 = 1;",
                                "Number.prototype = Object.defineProperty(\n    Number.prototype, \"double\", {\n        get: function() {\n            return (this + this)\n        }\n    }\n);\nNumber.prototype = Object.defineProperty(\n    Number.prototype, \"square\", {\n        get: function() {\n            return (this * this)\n        }\n    }\n);\nconsole.log((8).double); //16\nconsole.log((8).double.square); //256",
                                "Number.prototype = Object.defineProperty(\n        Number.prototype, \"double\", {\n            get: function() {\n                return (this + this)\n            }\n        }\n    );\n    Number.prototype = Object.defineProperty(\n        Number.prototype, \"square\", {\n            get: function() {\n                return (this * this)\n            }\n        }\n    );\n    console.log((8).double); //16\n    console.log((8).double.square); //256",
                                "Number.prototype = Object.defineProperty(\n    Number.prototype, \"double\", {\n        get: function() {\n            return (this + this)\n        }\n    }\n);\nNumber.prototype = Object.defineProperty(\n    Number.prototype, \"square\", {\n        get: function() {\n            return (this * this)\n        }\n    }\n);\nconsole.log((8).double);//16\nconsole.log((8).double.square);//256",
                                "Number.prototype = Object.defineProperty(\n    Number.prototype, \"double\", {\n        get: function() {\n            return (this + this)\n        }\n    }\n);\nNumber.prototype = Object.defineProperty(\n    Number.prototype, \"square\", {\n        get: function() {\n            return (this * this)\n        }\n    }\n);\nconsole.log((8).double.square);//256",
                                "Number.prototype = Object.defineProperty(\n    Number.prototype, \"double\", {\n        get: function() {\n            return (this + this)\n        }\n    }\n);\n\nNumber.prototype = Object.defineProperty(\n    Number.prototype, \"square\", {\n        get: function() {\n            return (this * this)\n        }\n    }\n);\nconsole.log((8).double.suqare);//256",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};Number.prototype.subtract = function(x) {\n    return this - x;\n};console.log((8).add(2).subtract(4));",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\n\nconsole.log(8.add(2));//SyntaxError: Unexpected token ILLEGAL",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\nconsole.log(8..add(2));//10\n",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\nconsole.log(8..add(2));//10\nconsole.log(8.add(2));//SyntaxError: Unexpected token ILLEGAL",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\n\nconsole.log(8..add(2));//10\n//报错，因为数值后面的点，会被解释为小数点，而不是点运算符。\nconsole.log(8.add(2));//SyntaxError: Unexpected token ILLEGAL",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\nconsole.log(8['add'](2));//10\nconsole.log((8).add(2));//10\n",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\nconsole.log(8['add'](2));//10\nconsole.log((8).add(2));//10\n//第一个点解释为小数点，第二个点解释为点运算符。\nconsole.log(8..add(2));//10\n//报错，因为数值后面的点，会被解释为小数点，而不是点运算符。\nconsole.log(8.add(2));//SyntaxError: Unexpected token ILLEGAL",
                                "console.log(8['add'](2));//10\nconsole.log((8).add(2));//10\n//第一个点解释为小数点，第二个点解释为点运算符。\nconsole.log(8..add(2));//10\n//报错，因为数值后面的点，会被解释为小数点，而不是点运算符。\nconsole.log(8.add(2));//SyntaxError: Unexpected token ILLEGAL\n",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\nconsole.log(8['add'](2));//10\nconsole.log((8).add(2));//10\n//报错，因为数值后面的点，会被解释为小数点，而不是点运算符。\nconsole.log(8.add(2));//SyntaxError: Unexpected token ILLEGAL\n//第一个点解释为小数点，第二个点解释为点运算符。\nconsole.log(8..add(2));//10",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\nconsole.log(8['add'](2));//10\nconsole.log((8).add(2));//10\nconsole.log(8..add(2));//10\n\nconsole.log(8.add(2));//报错，因为数值后面的点，会被解释为小数点，而不是点运算符。",
                                "Number.prototype.add = function(x) {\n    return this + x;\n};\nconsole.log(8['add'](2));//10\nconsole.log((8).add(2));//10\nconsole.log(8..add(2));//10\n\nconsole.log(8..add(2));//报错，因为数值后面的点，会被解释为小数点，而不是点运算符。",
                                "function foo(x : number) {\n    return x * 10;\n}\nconsole.log(foo(\"5\"));",
                                "function foo(x) {\n    return x * 10;\n}\nconsole.log(foo(\"5\"));",
                                "function foo(x) {\n    return x * 10;\n}\nconsole.log(foo(\"Hello, world!\"));",
                                "function foo(x) {\n    return x * 10;\n}\nfoo(\"Hello, world!\");",
                                "console.log(\"xx\")"
                            ],
                            "pos": 0
                        },
                        "hash": "bc37e9908b413249fe666f189265c03143e4d841",
                        "meta": {
                            "timestamp": 1441863755460
                        },
                        "changed": false
                    },
                    "editorType": "immediate",
                    "active": false
                },
                {
                    "type": "tab",
                    "name": "tab3",
                    "path": "",
                    "className": [
                        "tab3",
                        "focus",
                        "connecting"
                    ],
                    "document": {
                        "changed": false,
                        "meta": {
                            "timestamp": 1467099071360
                        },
                        "filter": true,
                        "title": "source/scripts/githubcommit.sh - Idle",
                        "tooltip": "source/scripts/githubcommit.sh - Idle",
                        "output": {
                            "id": "output792790",
                            "width": 1556,
                            "height": 283,
                            "config": {
                                "runner": "Shell script",
                                "command": "source/scripts/githubcommit.sh",
                                "toolbar": true,
                                "name": ""
                            }
                        }
                    },
                    "editorType": "output",
                    "active": true
                }
            ],
            "skin": "editor_tab",
            "skinset": "default",
            "type": "pane"
        }
    },
    "experiments": {
        "@@enabled": true,
        "@autosave": 0,
        "@flat-dark": 0,
        "@git": 1,
        "@go_completion": 0,
        "@mount": 0,
        "@plugin-manager": 1,
        "@plugins": 0,
        "@sdk": 0,
        "@test": 0
    },
    "ext": {
        "counters": {
            "@ace": 1,
            "@ace.repl": 1,
            "@acestatus": 1,
            "@datagrid": 1,
            "@divider": 4,
            "@document": 5,
            "@form": 5,
            "@immediate": 1,
            "@menu": 5,
            "@menuitem": 13,
            "@pane": 6,
            "@postmessage": 3,
            "@preferences": 1,
            "@preview": 4,
            "@session": 4,
            "@tab": 5,
            "@tree": 2,
            "@undoManager": 5,
            "@welcome": 1
        }
    },
    "findinfiles": {
        "@console": "true",
        "@matchcase": "false",
        "@regex": "false",
        "@scope": "selection",
        "@wholeword": "false"
    },
    "gotoline": {
        "json()": [
            "12",
            "2",
            "3"
        ]
    },
    "installer": {
        "json()": {}
    },
    "menus": {
        "@minimized": false
    },
    "nak": {
        "@installed": true
    },
    "panecycle": {
        "json()": [
            "tab3",
            "tab2"
        ]
    },
    "panels": {
        "@active-left": "tree",
        "@active-right": "none",
        "@width-left": 292,
        "commands.panel": {
            "@enabled": "true",
            "@name": "commands.panel"
        },
        "debugger": {
            "@enabled": "true",
            "@name": "debugger"
        },
        "navigate": {
            "@enabled": "true",
            "@name": "navigate"
        },
        "outline": {
            "@enabled": "true",
            "@name": "outline"
        },
        "scm": {
            "@enabled": "true",
            "@name": "scm"
        },
        "tree": {
            "@enabled": "true",
            "@name": "tree"
        }
    },
    "projecttree": {
        "@scrollpos": -10,
        "@showfs": true,
        "expanded": {
            "json()": [
                "/themes/freemind",
                "/themes/landscape",
                "/node_modules/hexo/lib/hexo",
                "/",
                "/source",
                "/source/_posts"
            ]
        }
    },
    "recentfiles": {
        "json()": []
    },
    "search-history": {
        "replace": {
            "json()": [
                "模块",
                "vagrant@precise32:~$",
                "~",
                "@",
                "#"
            ]
        },
        "search": {
            "json()": [
                "zaozaool",
                "package",
                "[root@redhat~]#",
                " ~",
                " @",
                "###"
            ]
        },
        "searchfiles": {
            "json()": [
                "vagrant",
                "zaozaool"
            ]
        }
    },
    "tabs": {
        "json()": {
            "focus": "tab3",
            "meta": {
                "accessList": [
                    "tab2"
                ]
            },
            "name": "pane0",
            "nodes": [
                {
                    "type": "tab",
                    "name": "tab2",
                    "path": "/source/_posts/Mysql递归查询.md",
                    "className": [
                        "tab2"
                    ],
                    "document": {
                        "changed": false,
                        "meta": {
                            "timestamp": 1467344290206
                        },
                        "filter": true,
                        "title": "Mysql递归查询.md",
                        "tooltip": "/source/_posts/Mysql递归查询.md",
                        "ace": {}
                    },
                    "editorType": "ace",
                    "active": true
                }
            ],
            "skin": "editor_tab",
            "skinset": "default",
            "type": "pane"
        }
    },
    "tree_selection": {
        "json()": [
            "/source/_posts/Groovy-Grails入门.md"
        ]
    }
}